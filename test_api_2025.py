#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API Bybit –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∑–∞ 2025 –≥–æ–¥
"""

import requests
import json
from datetime import datetime

def test_bybit_api_2025():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∑–∞ 2025 –≥–æ–¥"""
    
    base_url = 'https://api.bybit.com'
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è 2025 –≥–æ–¥–∞
    test_params = [
        {
            'market': 'spot',
            'symbol': 'SOLUSDT',
            'start_date': '2025-01-01',
            'end_date': '2025-01-02'
        },
        {
            'market': 'linear',
            'symbol': 'SOLUSDT', 
            'start_date': '2025-01-01',
            'end_date': '2025-01-02'
        },
        {
            'market': 'spot',
            'symbol': 'SOLUSDT',
            'start_date': '2025-09-01',
            'end_date': '2025-09-02'
        }
    ]
    
    for params in test_params:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É—é {params['market']} {params['symbol']} —Å {params['start_date']} –ø–æ {params['end_date']}")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
        start_ts = int(datetime.strptime(params['start_date'], '%Y-%m-%d').timestamp() * 1000)
        end_ts = int(datetime.strptime(params['end_date'], '%Y-%m-%d').timestamp() * 1000)
        
        url = f"{base_url}/v5/market/kline"
        
        api_params = {
            'category': params['market'],
            'symbol': params['symbol'],
            'interval': '1',  # 1 –º–∏–Ω—É—Ç–∞
            'start': str(start_ts),
            'end': str(end_ts),
            'limit': 10
        }
        
        print(f"üì° URL: {url}")
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {api_params}")
        
        try:
            response = requests.get(url, params=api_params)
            print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –û—Ç–≤–µ—Ç API:")
                print(f"   retCode: {data.get('retCode')}")
                print(f"   retMsg: {data.get('retMsg')}")
                
                if data.get('retCode') == 0:
                    result = data.get('result', {})
                    list_data = result.get('list', [])
                    print(f"   üìà –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(list_data)}")
                    
                    if list_data:
                        print(f"   üìÖ –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: {list_data[0]}")
                        print(f"   üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å: {list_data[-1]}")
                    else:
                        print("   ‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ")
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ API: {data.get('retMsg')}")
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        print("-" * 50)

if __name__ == "__main__":
    test_bybit_api_2025()
