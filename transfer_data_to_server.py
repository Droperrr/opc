#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
–†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –ø–æ—Ç–µ—Ä–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –∑–∞ –≥–æ–¥ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import subprocess
import zipfile
from pathlib import Path
import shutil

def create_data_archive():
    """–°–æ–∑–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤ —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    
    # –ü–∞–ø–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞
    data_folders = [
        'data',
        'backups'
    ]
    
    # CSV —Ñ–∞–π–ª—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    csv_files = [
        'signals.csv',
        'signals_enhanced.csv', 
        'signals_optimized.csv',
        'signals_optimized_extended.csv',
        'trend_signals.csv',
        'trend_signals_extended.csv',
        'trend_signals_all.csv',
        'sol_all_options_iv.csv',
        'sol_iv_2025-09-02.csv',
        'sol_iv_2025-09-03.csv',
        'sol_iv_2025-09-04.csv',
        'sol_option_iv_current.csv'
    ]
    
    # JSON —Ñ–∞–π–ª—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    json_files = [
        's10_memory_report.json',
        'error_analysis_table.csv',
        'error_statistics.csv'
    ]
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –∞—Ä—Ö–∏–≤–∞
    temp_dir = Path('temp_data_transfer')
    temp_dir.mkdir(exist_ok=True)
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
    for folder in data_folders:
        if os.path.exists(folder):
            dest = temp_dir / folder
            shutil.copytree(folder, dest, dirs_exist_ok=True)
            print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –ø–∞–ø–∫–∞: {folder}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º CSV —Ñ–∞–π–ª—ã
    for csv_file in csv_files:
        if os.path.exists(csv_file):
            shutil.copy2(csv_file, temp_dir)
            print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: {csv_file}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º JSON —Ñ–∞–π–ª—ã
    for json_file in json_files:
        if os.path.exists(json_file):
            shutil.copy2(json_file, temp_dir)
            print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: {json_file}")
    
    # –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤
    archive_name = 'historical_data_complete.zip'
    with zipfile.ZipFile(archive_name, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, dirs, files in os.walk(temp_dir):
            for file in files:
                file_path = os.path.join(root, file)
                arcname = os.path.relpath(file_path, temp_dir)
                zipf.write(file_path, arcname)
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    shutil.rmtree(temp_dir)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞
    archive_size = os.path.getsize(archive_name) / (1024 * 1024)  # MB
    print(f"üìä –°–æ–∑–¥–∞–Ω –∞—Ä—Ö–∏–≤: {archive_name} ({archive_size:.1f} MB)")
    
    return archive_name

def show_transfer_instructions(archive_name):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–µ—Ä–µ–Ω–æ—Å—É –¥–∞–Ω–Ω—ã—Ö"""
    
    print("\n" + "="*60)
    print("üöÄ –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–ï–†–ï–ù–û–°–£ –î–ê–ù–ù–´–• –ù–ê –°–ï–†–í–ï–†")
    print("="*60)
    
    print(f"\nüìÅ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: {archive_name}")
    print(f"üìä –†–∞–∑–º–µ—Ä: {os.path.getsize(archive_name) / (1024 * 1024):.1f} MB")
    
    print("\nüîß –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–µ—Ä–µ–Ω–æ—Å–∞:")
    
    print("\n1Ô∏è‚É£ –ß–µ—Ä–µ–∑ SCP (–µ—Å–ª–∏ SSH —Ä–∞–±–æ—Ç–∞–µ—Ç):")
    print(f"   scp {archive_name} asp_ural@89.169.189.43:~/projects/opc/")
    
    print("\n2Ô∏è‚É£ –ß–µ—Ä–µ–∑ –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:")
    print("   - –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞—Ä—Ö–∏–≤ –≤ Google Drive / Dropbox / –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫")
    print("   - –°–∫–∞—á–∞–π—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —á–µ—Ä–µ–∑ wget/curl")
    
    print("\n3Ô∏è‚É£ –ß–µ—Ä–µ–∑ USB/–≤–Ω–µ—à–Ω–∏–π –Ω–æ—Å–∏—Ç–µ–ª—å:")
    print("   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∞—Ä—Ö–∏–≤ –Ω–∞ —Ñ–ª–µ—à–∫—É")
    print("   - –ü–µ—Ä–µ–Ω–µ—Å–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Ñ–∏–∑–∏—á–µ—Å–∫–∏")
    
    print("\nüìã –ü–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("   cd ~/projects/opc")
    print(f"   unzip {archive_name}")
    print("   rm historical_data_complete.zip")
    print("   ls -la data/  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö:")
    print("   python -c \"import sqlite3; conn=sqlite3.connect('data/sol_iv.db'); print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö OK:', len(conn.execute('SELECT name FROM sqlite_master WHERE type=\"table\"').fetchall()), '—Ç–∞–±–ª–∏—Ü')\"")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üéØ –ü–ï–†–ï–ù–û–° –ò–°–¢–û–†–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–• –ù–ê –°–ï–†–í–ï–†")
    print("="*50)
    print("–¶–µ–ª—å: –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –∑–∞ –≥–æ–¥ –¥–∞–Ω–Ω—ã–µ")
    print("–ü—Ä–æ–±–ª–µ–º–∞: –ù–µ —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π —Å–±–æ—Ä")
    print("–†–µ—à–µ–Ω–∏–µ: –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
        archive_name = create_data_archive()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        show_transfer_instructions(archive_name)
        
        print("\nüéâ –ì–û–¢–û–í–û! –ê—Ä—Ö–∏–≤ —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–∑–¥–∞–Ω.")
        print("üìã –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    return True

if __name__ == "__main__":
    main()
